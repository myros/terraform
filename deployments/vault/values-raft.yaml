global:
  enabled: true
  tlsDisable: false

# csi: 
#   enabled: true
  
injector:
  enabled: false
  image:
    repository: "hashicorp/vault-k8s"
    tag: "0.14.2"
    pullPolicy: IfNotPresent

  agentImage:
    repository: "vault"
    tag: "1.9.2"

  # only if we're using tls disable
  # externalVaultAddr: "https://vault.default.svc:8200"

server:
  annotations:
    cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    # kubernetes.io/ingress.class: "nginx

  extraEnvironmentVars:
    GOOGLE_REGION: "${region}"
    GOOGLE_PROJECT: "${project_id}"
    GOOGLE_APPLICATION_CREDENTIALS: /vault/userconfig/kms-pl-creds/credentials.json
    VAULT_ADDR: https://127.0.0.1:8200
    VAULT_SKIP_VERIFY: true
    VAULT_CACERT: /vault/userconfig/${vault-tls}/ca.crt  

  extraVolumes:
    - type: 'secret'
      name: 'kms-pl-creds'
    - type: 'secret'
      name: ${vault-tls}    

  image:
    repository: "vault"
    tag: "1.9.2"
    # Overrides the default Image Pull Policy
    pullPolicy: IfNotPresent      

  ha:
    enabled: true
    replicas: 3
    
    raft:  
      enabled: true  
      config: |
        ui = true
  
        listener "tcp" {
          tls_disable = 0
          address = "[::]:8200"
          cluster_address = "[::]:8201"

          # this will come from vault-tls secret
          tls_cert_file = "/vault/userconfig/${vault-tls}/vault.crt"
          tls_key_file  = "/vault/userconfig/${vault-tls}/vault.key"
          tls_client_ca_file = "/vault/userconfig/${vault-tls}/ca.crt"
          # tls_disable_client_certs = true

          # tls_cert_file = "/vault/userconfig/${vault-tls}/vault.crt"
          # tls_key_file  = "/vault/userconfig/${vault-tls}/vault.key"
          # tls_client_ca_file = "/vault/userconfig/${vault-tls}/vault_ca.crt"
        }
  
        seal "gcpckms" {
          project     = "${project_id}"
          region      = "${region}"
          key_ring    = "${keyring}"
          crypto_key  = "${cryptokey}"
        }
  
        storage "raft" {
          path = "/vault/data"
        }
ui:
  enabled: true
  serviceType: "LoadBalancer"
  # serviceNodePort: null
  # externalPort: 8200    