# gcr.io/config-validator/terraform-validator => terraform 0.12.31
steps:
  # - id: '0 - Build new image'
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: [ 'build', '-t', 'gcr.io/${PROJECT_ID}/repo/terraform-validator', '.' ]

  # - id: '0 - PUsh new image'
  #   name: 'gcr.io/cloud-builders/docker'
  #   args: [ 'push', 'gcr.io/${PROJECT_ID}/repo/terraform-validator', ':', 'latest' ]


  - id: 'Prerequisites'
    name: gcr.io/${PROJECT_ID}/repo/terraform-validator
    entrypoint: sh
    args:
      - -c
      - | 
        echo 'branch: $BRANCH_NAME'
        echo "*************** PREREQUISITES ******************"
        echo "******* At environment: ${env} ********"
        echo "*************************************************"

        mkdir ./reports

  - id: '1 Initialize and create terraform plan'
    name: gcr.io/${PROJECT_ID}/repo/terraform-validator
    entrypoint: sh
    args:
      - -c
      - | 
        echo 'branch: $BRANCH_NAME'
        echo "*************** TERRAFOM PLAN ******************"
        echo "******* At environment: ${PROJECT_ID} ********"
        echo "******* At environment: ${PROJECT_NUMBER} ********"
        echo "*************************************************"

        cat <<EOF > main.auto.tfvars
        project = "${PROJECT_ID}"
        project_id = "${PROJECT_ID}"
        project_number = "${PROJECT_NUMBER}"

        EOF

        # cat main.auto.tfvars
        terraform init
        terraform validate
        terraform plan --out=terraform.tfplan
        terraform show --json ./terraform.tfplan | jq '.' > ./terraform.tfplan.json
        
    dir: deployments/vault

  # -----------------------------------
  - id: 'Lint'
    name: gcr.io/${PROJECT_ID}/repo/terraform-validator
    entrypoint: sh
    args:
      - -c
      - | 
        echo "*************** TERRAFOM LINT ******************"
        echo "*************************************************"

        tflint --init
        tflint --force ./deployments/vault > ./reports/tflint.txt

        echo "*************** END *****************************"
        echo "*************************************************"

  # -----------------------------------
  - id: 'Chekov'
    name: gcr.io/${PROJECT_ID}/repo/terraform-validator
    entrypoint: sh
    args:
      - -c
      - | 
        echo "*************** TERRAFOM CHECK ******************"
        echo "*************************************************"

        checkov -s -f ./deployments/vault/terraform.tfplan.json > ./reports/checkov.txt
        
        echo "*************** END *****************************"
        echo "*************************************************"

  # -----------------------------------
  - id: 'Terrascan'
    name: gcr.io/${PROJECT_ID}/repo/terraform-validator
    entrypoint: sh
    args:
      - -c
      - | 
        echo "*************** TERRAFOM SCAN ******************"
        echo "*************************************************"

        terrascan -f ./deployments/vault/terraform.tfplan.json > ./reports/terrascan.txt

        echo ls deployments/vault
        echo "*************** END *****************************"
        echo "*************************************************"

  # -----------------------------------
  - id: 'Validate Terraform plan with Google Terraform Validator'
    name: gcr.io/${PROJECT_ID}/repo/terraform-validator
    args:
      - validate
      - terraform.tfplan.json
      - '--policy-path=../../'
      - '--project'
      - maginfo
    dir: deployments/vault

  # -----------------------------------
  - id: 'Deploy'
    name: gcr.io/${PROJECT_ID}/repo/terraform-validator
    entrypoint: terraform
    args:
      - apply 
      - '--auto-approve'
      - terraform.tfplan
    dir: deployments/vault

artifacts:
  objects:
    location: "gs://maginfo-tf-backend/reports-$BUILD_ID/"
    paths:  
      - 'deployments/vault/terraform.tfplan.json'
      - ./reports/*